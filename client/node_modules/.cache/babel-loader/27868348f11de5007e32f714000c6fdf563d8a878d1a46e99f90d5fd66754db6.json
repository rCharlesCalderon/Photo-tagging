{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Psnma\\\\photo-tagging\\\\client\\\\src\\\\components\\\\Midnight.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext, createContext } from \"react\";\nimport \"../index.css\";\nimport \"../styles/Midnight.css\";\nimport TargetCore from \"./TargetCore.jsx\";\nimport TargetList from \"./TargetList.jsx\";\nimport TargetStatus from \"./TargetStatus.jsx\";\nimport Header from \"./Header.jsx\";\nimport SubmitData from \"./SubmitData.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst targetContext = /*#__PURE__*/createContext(null);\nfunction Midnight() {\n  _s();\n  const [menu, setMenu] = useState(false);\n  //targetCore\n  const [targetCoreX, setTargetCoreXPosition] = useState(0);\n  const [targetCoreY, setTargetCoreYPosition] = useState(0);\n  //TargetList\n  const [targetListX, setTargetListXPosition] = useState(0);\n  const [targetListY, setTargetListYPosition] = useState(0);\n  //X Y coordinates\n  const [cordX, setCordX] = useState(0);\n  const [cordY, setCordY] = useState(0);\n  //targetData is the data from backend in the fetchTargetImages\n  const [targetData, setTargetData] = useState(null);\n  const [targetStat, setTargetStatus] = useState(false);\n  const [scoreboard, setScoreboard] = useState(null);\n  const [test, setTest1] = useState(false);\n  useEffect(() => {\n    fetchTargetImages();\n  }, []);\n  useEffect(() => {\n    setScoreboard(true);\n  }, [scoreboard, targetData]);\n  function fetchTargetImages() {\n    fetch(\"http://localhost:3000/fetchTargetImages\").then(res => {\n      return res.json();\n    }).then(data => setTargetData(data));\n  }\n  function handleGame(event) {\n    setMenu(!menu);\n    handlePosition(event);\n  }\n  const handlePosition = e => {\n    let midnight = document.querySelector(\".midnight\");\n    let xPositioning = e.clientX + window.scrollX;\n    let yPositioning = e.clientY + window.scrollY;\n    let containerWidth = midnight.clientWidth;\n    let containerHeight = midnight.clientHeight;\n    let targetCordX = xPositioning / containerWidth * 100;\n    let targetCordY = yPositioning / containerHeight * 100;\n    setTargetCoreXPosition(xPositioning);\n    setTargetCoreYPosition(yPositioning);\n    setTargetListXPosition(xPositioning);\n    setTargetListYPosition(yPositioning);\n    setCordX(targetCordX);\n    setCordY(targetCordY);\n    //TOP LEFT 39X 57Y\n    //BOTTOM RIGHT 44X 64Y\n    console.log(targetCordX, \"X\");\n    console.log(targetCordY, \"Y\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(targetContext.Provider, {\n      value: {\n        targetListX,\n        targetListY,\n        targetData,\n        setTargetData,\n        targetCoreX,\n        targetCoreY,\n        cordX,\n        cordY,\n        targetStat,\n        setTargetStatus,\n        menu,\n        setMenu,\n        scoreboard,\n        setScoreboard\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), targetStat && /*#__PURE__*/_jsxDEV(TargetStatus, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./images/midnight.png\",\n        alt: \"\",\n        className: \"midnight\",\n        onClick: handleGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), menu && /*#__PURE__*/_jsxDEV(TargetCore, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 18\n      }, this), menu && /*#__PURE__*/_jsxDEV(TargetList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 18\n      }, this), scoreboard && /*#__PURE__*/_jsxDEV(SubmitData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Midnight, \"qJE0mfjP5G7aMuZMwdXD6w7/zUU=\");\n_c = Midnight;\nexport { Midnight, targetContext };\nvar _c;\n$RefreshReg$(_c, \"Midnight\");","map":{"version":3,"names":["useEffect","useState","useContext","createContext","TargetCore","TargetList","TargetStatus","Header","SubmitData","jsxDEV","_jsxDEV","Fragment","_Fragment","targetContext","Midnight","_s","menu","setMenu","targetCoreX","setTargetCoreXPosition","targetCoreY","setTargetCoreYPosition","targetListX","setTargetListXPosition","targetListY","setTargetListYPosition","cordX","setCordX","cordY","setCordY","targetData","setTargetData","targetStat","setTargetStatus","scoreboard","setScoreboard","test","setTest1","fetchTargetImages","fetch","then","res","json","data","handleGame","event","handlePosition","e","midnight","document","querySelector","xPositioning","clientX","window","scrollX","yPositioning","clientY","scrollY","containerWidth","clientWidth","containerHeight","clientHeight","targetCordX","targetCordY","console","log","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Psnma/photo-tagging/client/src/components/Midnight.jsx"],"sourcesContent":["import { useEffect, useState, useContext, createContext } from \"react\";\r\nimport \"../index.css\";\r\nimport \"../styles/Midnight.css\";\r\nimport TargetCore from \"./TargetCore.jsx\";\r\nimport TargetList from \"./TargetList.jsx\";\r\nimport TargetStatus from \"./TargetStatus.jsx\";\r\nimport Header from \"./Header.jsx\";\r\nimport SubmitData from \"./SubmitData.jsx\";\r\nconst targetContext = createContext(null);\r\nfunction Midnight() {\r\n  const [menu, setMenu] = useState(false);\r\n  //targetCore\r\n  const [targetCoreX, setTargetCoreXPosition] = useState(0);\r\n  const [targetCoreY, setTargetCoreYPosition] = useState(0);\r\n  //TargetList\r\n  const [targetListX, setTargetListXPosition] = useState(0);\r\n  const [targetListY, setTargetListYPosition] = useState(0);\r\n  //X Y coordinates\r\n  const [cordX, setCordX] = useState(0);\r\n  const [cordY, setCordY] = useState(0);\r\n  //targetData is the data from backend in the fetchTargetImages\r\n  const [targetData, setTargetData] = useState(null);\r\n\r\n  const [targetStat, setTargetStatus] = useState(false);\r\n\r\n  const [scoreboard, setScoreboard] = useState(null);\r\n  const [test, setTest1] = useState(false);\r\n  useEffect(() => {\r\n    fetchTargetImages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setScoreboard(true);\r\n  }, [scoreboard, targetData]);\r\n\r\n  function fetchTargetImages() {\r\n    fetch(\"http://localhost:3000/fetchTargetImages\")\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => setTargetData(data));\r\n  }\r\n\r\n  function handleGame(event) {\r\n    setMenu(!menu);\r\n    handlePosition(event);\r\n  }\r\n\r\n  const handlePosition = (e) => {\r\n    let midnight = document.querySelector(\".midnight\");\r\n    let xPositioning = e.clientX + window.scrollX;\r\n    let yPositioning = e.clientY + window.scrollY;\r\n\r\n    let containerWidth = midnight.clientWidth;\r\n    let containerHeight = midnight.clientHeight;\r\n    let targetCordX = (xPositioning / containerWidth) * 100;\r\n    let targetCordY = (yPositioning / containerHeight) * 100;\r\n    setTargetCoreXPosition(xPositioning);\r\n    setTargetCoreYPosition(yPositioning);\r\n    setTargetListXPosition(xPositioning);\r\n    setTargetListYPosition(yPositioning);\r\n    setCordX(targetCordX);\r\n    setCordY(targetCordY);\r\n    //TOP LEFT 39X 57Y\r\n    //BOTTOM RIGHT 44X 64Y\r\n    console.log(targetCordX, \"X\");\r\n    console.log(targetCordY, \"Y\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <targetContext.Provider\r\n        value={{\r\n          targetListX,\r\n          targetListY,\r\n          targetData,\r\n          setTargetData,\r\n          targetCoreX,\r\n          targetCoreY,\r\n          cordX,\r\n          cordY,\r\n          targetStat,\r\n          setTargetStatus,\r\n          menu,\r\n          setMenu,\r\n          scoreboard,\r\n          setScoreboard,\r\n        }}\r\n      >\r\n        <Header />\r\n        {targetStat && <TargetStatus />}\r\n        <img\r\n          src=\"./images/midnight.png\"\r\n          alt=\"\"\r\n          className=\"midnight\"\r\n          onClick={handleGame}\r\n        ></img>\r\n        {menu && <TargetCore />}\r\n        {menu && <TargetList />}\r\n        {scoreboard && <SubmitData />}\r\n      </targetContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { Midnight, targetContext };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}