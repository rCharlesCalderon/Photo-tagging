{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Psnma\\\\photo-tagging\\\\client\\\\src\\\\components\\\\SubmitData.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useContext } from \"react\";\nimport \"../index.css\";\nimport \"../styles/SubmitData.css\";\nimport { targetContext } from \"./Midnight\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SubmitData() {\n  _s();\n  const {\n    Map\n  } = useParams();\n  const {\n    targetData,\n    scoreboard,\n    setScoreboard,\n    menu,\n    time,\n    setIntervalId,\n    intervalId,\n    updateTimer\n  } = useContext(targetContext);\n  useEffect(() => {\n    pauseOrResume();\n  }, []);\n  function handleScoreboard() {\n    const usernameInput = document.querySelector(\".submit-input\").value;\n    console.log(Map);\n    fetch(`http://localhost:3000/${Map}Leaderboard`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: usernameInput,\n        seconds: time.sec,\n        minutes: time.min,\n        hours: time.hr,\n        mapName: Map\n      })\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      window.location.href = data.home;\n    });\n  }\n  function pauseOrResume() {\n    clearInterval(intervalId);\n    setIntervalId(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"submit-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"You got\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `${time.hr < 10 ? 0 : \"\"}${time.hr} : ${time.min < 10 ? 0 : \"\"}${time.min} : ${time.sec < 10 ? 0 : \"\"}${time.sec}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Enter Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"submit-input\",\n      name: \"username\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleScoreboard,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(SubmitData, \"rshlJxvsfGvHVG58lwHfBazro5Q=\", false, function () {\n  return [useParams];\n});\n_c = SubmitData;\nexport default SubmitData;\nvar _c;\n$RefreshReg$(_c, \"SubmitData\");","map":{"version":3,"names":["useEffect","useContext","targetContext","useParams","jsxDEV","_jsxDEV","SubmitData","_s","Map","targetData","scoreboard","setScoreboard","menu","time","setIntervalId","intervalId","updateTimer","pauseOrResume","handleScoreboard","usernameInput","document","querySelector","value","console","log","fetch","method","headers","body","JSON","stringify","username","seconds","sec","minutes","min","hours","hr","mapName","then","res","json","data","window","location","href","home","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Psnma/photo-tagging/client/src/components/SubmitData.jsx"],"sourcesContent":["import { useEffect, useContext } from \"react\";\r\nimport \"../index.css\";\r\nimport \"../styles/SubmitData.css\";\r\nimport { targetContext } from \"./Midnight\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction SubmitData() {\r\n  const { Map } = useParams();\r\n  const {\r\n    targetData,\r\n    scoreboard,\r\n    setScoreboard,\r\n    menu,\r\n    time,\r\n    setIntervalId,\r\n    intervalId,\r\n    updateTimer,\r\n  } = useContext(targetContext);\r\n\r\n  useEffect(() => {\r\n    pauseOrResume();\r\n  }, []);\r\n\r\n  function handleScoreboard() {\r\n    const usernameInput = document.querySelector(\".submit-input\").value;\r\n\r\n    console.log(Map);\r\n    fetch(`http://localhost:3000/${Map}Leaderboard`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: usernameInput,\r\n        seconds: time.sec,\r\n        minutes: time.min,\r\n        hours: time.hr,\r\n        mapName: Map,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        window.location.href = data.home;\r\n      });\r\n  }\r\n\r\n  function pauseOrResume() {\r\n    clearInterval(intervalId);\r\n    setIntervalId(\"\");\r\n  }\r\n  return (\r\n    <div className=\"submit-container\">\r\n      <h1>You got</h1>\r\n      <h2>{`${time.hr < 10 ? 0 : \"\"}${time.hr} : ${time.min < 10 ? 0 : \"\"}${\r\n        time.min\r\n      } : ${time.sec < 10 ? 0 : \"\"}${time.sec}`}</h2>\r\n      <h3>Enter Name</h3>\r\n      <input\r\n        type=\"text\"\r\n        className=\"submit-input\"\r\n        name=\"username\"\r\n        required\r\n      ></input>\r\n      <button className=\"submit-button\" onClick={handleScoreboard}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubmitData;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,OAAO,cAAc;AACrB,OAAO,0BAA0B;AACjC,SAASC,aAAa,QAAQ,YAAY;AAC1C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAI,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC3B,MAAM;IACJM,UAAU;IACVC,UAAU;IACVC,aAAa;IACbC,IAAI;IACJC,IAAI;IACJC,aAAa;IACbC,UAAU;IACVC;EACF,CAAC,GAAGf,UAAU,CAACC,aAAa,CAAC;EAE7BF,SAAS,CAAC,MAAM;IACdiB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,gBAAgBA,CAAA,EAAG;IAC1B,MAAMC,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC,CAACC,KAAK;IAEnEC,OAAO,CAACC,GAAG,CAAChB,GAAG,CAAC;IAChBiB,KAAK,CAAE,yBAAwBjB,GAAI,aAAY,EAAE;MAC/CkB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,QAAQ,EAAEZ,aAAa;QACvBa,OAAO,EAAEnB,IAAI,CAACoB,GAAG;QACjBC,OAAO,EAAErB,IAAI,CAACsB,GAAG;QACjBC,KAAK,EAAEvB,IAAI,CAACwB,EAAE;QACdC,OAAO,EAAE9B;MACX,CAAC;IACH,CAAC,CAAC,CACC+B,IAAI,CAAEC,GAAG,IAAK;MACb,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACdnB,OAAO,CAACC,GAAG,CAACkB,IAAI,CAAC;MACjBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGH,IAAI,CAACI,IAAI;IAClC,CAAC,CAAC;EACN;EAEA,SAAS7B,aAAaA,CAAA,EAAG;IACvB8B,aAAa,CAAChC,UAAU,CAAC;IACzBD,aAAa,CAAC,EAAE,CAAC;EACnB;EACA,oBACET,OAAA;IAAK2C,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/B5C,OAAA;MAAA4C,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBhD,OAAA;MAAA4C,QAAA,EAAM,GAAEpC,IAAI,CAACwB,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAG,GAAExB,IAAI,CAACwB,EAAG,MAAKxB,IAAI,CAACsB,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,EAAG,GAClEtB,IAAI,CAACsB,GACN,MAAKtB,IAAI,CAACoB,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,EAAG,GAAEpB,IAAI,CAACoB,GAAI;IAAC;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/ChD,OAAA;MAAA4C,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhD,OAAA;MACEiD,IAAI,EAAC,MAAM;MACXN,SAAS,EAAC,cAAc;MACxBO,IAAI,EAAC,UAAU;MACfC,QAAQ;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACThD,OAAA;MAAQ2C,SAAS,EAAC,eAAe;MAACS,OAAO,EAAEvC,gBAAiB;MAAA+B,QAAA,EAAC;IAE7D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC9C,EAAA,CAjEQD,UAAU;EAAA,QACDH,SAAS;AAAA;AAAAuD,EAAA,GADlBpD,UAAU;AAmEnB,eAAeA,UAAU;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}