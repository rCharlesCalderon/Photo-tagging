{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Psnma\\\\photo-tagging\\\\client\\\\src\\\\components\\\\AnimeMap.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"../index.css\";\nimport \"../styles/AnimeMap.css\";\nimport TargetCore from \"./TargetCore.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AnimeMap() {\n  _s();\n  //USE JSX TO CONDITIONALLY RENDER THE TAGETCORE AND BOX\n  //ADD THE IMAGES INTO THE BOX, USESTATE UPDATE THE PICTURES LATER\n  const [menu, setMenu] = useState(false);\n  const [xPosition, setXPosition] = useState(0);\n  const [yPosition, setYPosition] = useState(0);\n  const [targetImages, setTargetImages] = useState(null);\n  useEffect(() => {\n    fetchTargetImages();\n  }, [menu]);\n  function fetchTargetImages() {\n    fetch(\"http://localhost:3000/fetchTargetImages\").then(res => {\n      return res.json();\n    }).then(data => setTargetImages(data));\n  }\n  function handleGame(event) {\n    setMenu(!menu);\n    handleXPosition(event);\n    handleYPosition(event);\n  }\n  const handleXPosition = e => {\n    let xPositionn = e.clientX + window.scrollX - 10;\n    console.log(xPosition, \"X\");\n    setXPosition(xPositionn);\n  };\n  function handleYPosition(e) {\n    let yPositionn = e.clientY + window.scrollY - 20;\n    console.log(yPosition, \"Y\");\n    setYPosition(yPositionn);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./images/midnight.png\",\n      alt: \"\",\n      className: \"Anime-Map\",\n      onClick: handleGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), menu && /*#__PURE__*/_jsxDEV(TargetCore, {\n      x: xPosition,\n      y: yPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n}\n_s(AnimeMap, \"myXpNZwv840+AzVRPiXYdpjs+3o=\");\n_c = AnimeMap;\nexport default AnimeMap;\nvar _c;\n$RefreshReg$(_c, \"AnimeMap\");","map":{"version":3,"names":["useEffect","useState","TargetCore","jsxDEV","_jsxDEV","Fragment","_Fragment","AnimeMap","_s","menu","setMenu","xPosition","setXPosition","yPosition","setYPosition","targetImages","setTargetImages","fetchTargetImages","fetch","then","res","json","data","handleGame","event","handleXPosition","handleYPosition","e","xPositionn","clientX","window","scrollX","console","log","yPositionn","clientY","scrollY","children","src","alt","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","x","y","_c","$RefreshReg$"],"sources":["C:/Users/Psnma/photo-tagging/client/src/components/AnimeMap.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"../index.css\";\r\nimport \"../styles/AnimeMap.css\";\r\nimport TargetCore from \"./TargetCore.jsx\";\r\nfunction AnimeMap() {\r\n  //USE JSX TO CONDITIONALLY RENDER THE TAGETCORE AND BOX\r\n  //ADD THE IMAGES INTO THE BOX, USESTATE UPDATE THE PICTURES LATER\r\n  const [menu, setMenu] = useState(false);\r\n  const [xPosition, setXPosition] = useState(0);\r\n  const [yPosition, setYPosition] = useState(0);\r\n  const [targetImages, setTargetImages] = useState(null);\r\n  useEffect(() => {\r\n    fetchTargetImages();\r\n  }, [menu]);\r\n\r\n  function fetchTargetImages() {\r\n    fetch(\"http://localhost:3000/fetchTargetImages\")\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => setTargetImages(data));\r\n  }\r\n\r\n  function handleGame(event) {\r\n    setMenu(!menu);\r\n    handleXPosition(event);\r\n    handleYPosition(event);\r\n  }\r\n\r\n  const handleXPosition = (e) => {\r\n    let xPositionn = e.clientX + window.scrollX - 10;\r\n    console.log(xPosition, \"X\");\r\n    setXPosition(xPositionn);\r\n  };\r\n  function handleYPosition(e) {\r\n    let yPositionn = e.clientY + window.scrollY - 20;\r\n    console.log(yPosition, \"Y\");\r\n    setYPosition(yPositionn);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        src=\"./images/midnight.png\"\r\n        alt=\"\"\r\n        className=\"Anime-Map\"\r\n        onClick={handleGame}\r\n      ></img>\r\n      {menu && <TargetCore x={xPosition} y={yPosition} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AnimeMap;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,cAAc;AACrB,OAAO,wBAAwB;AAC/B,OAAOC,UAAU,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtDD,SAAS,CAAC,MAAM;IACdiB,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;EAEV,SAASQ,iBAAiBA,CAAA,EAAG;IAC3BC,KAAK,CAAC,yCAAyC,CAAC,CAC7CC,IAAI,CAAEC,GAAG,IAAK;MACb,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAKN,eAAe,CAACM,IAAI,CAAC,CAAC;EAC1C;EAEA,SAASC,UAAUA,CAACC,KAAK,EAAE;IACzBd,OAAO,CAAC,CAACD,IAAI,CAAC;IACdgB,eAAe,CAACD,KAAK,CAAC;IACtBE,eAAe,CAACF,KAAK,CAAC;EACxB;EAEA,MAAMC,eAAe,GAAIE,CAAC,IAAK;IAC7B,IAAIC,UAAU,GAAGD,CAAC,CAACE,OAAO,GAAGC,MAAM,CAACC,OAAO,GAAG,EAAE;IAChDC,OAAO,CAACC,GAAG,CAACtB,SAAS,EAAE,GAAG,CAAC;IAC3BC,YAAY,CAACgB,UAAU,CAAC;EAC1B,CAAC;EACD,SAASF,eAAeA,CAACC,CAAC,EAAE;IAC1B,IAAIO,UAAU,GAAGP,CAAC,CAACQ,OAAO,GAAGL,MAAM,CAACM,OAAO,GAAG,EAAE;IAChDJ,OAAO,CAACC,GAAG,CAACpB,SAAS,EAAE,GAAG,CAAC;IAC3BC,YAAY,CAACoB,UAAU,CAAC;EAC1B;EAEA,oBACE9B,OAAA,CAAAE,SAAA;IAAA+B,QAAA,gBACEjC,OAAA;MACEkC,GAAG,EAAC,uBAAuB;MAC3BC,GAAG,EAAC,EAAE;MACNC,SAAS,EAAC,WAAW;MACrBC,OAAO,EAAElB;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,EACNpC,IAAI,iBAAIL,OAAA,CAACF,UAAU;MAAC4C,CAAC,EAAEnC,SAAU;MAACoC,CAAC,EAAElC;IAAU;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACnD,CAAC;AAEP;AAACrC,EAAA,CA/CQD,QAAQ;AAAAyC,EAAA,GAARzC,QAAQ;AAiDjB,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}