{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Psnma\\\\photo-tagging\\\\client\\\\src\\\\components\\\\AnimeMap.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext, createContext } from \"react\";\nimport \"../index.css\";\nimport \"../styles/AnimeMap.css\";\nimport TargetCore from \"./TargetCore.jsx\";\nimport TargetList from \"./TargetList.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst targetContext = /*#__PURE__*/createContext(null);\nfunction AnimeMap() {\n  _s();\n  //USE JSX TO CONDITIONALLY RENDER THE TAGETCORE AND BOX\n  //ADD THE IMAGES INTO THE BOX, USESTATE UPDATE THE PICTURES LATER\n\n  const [menu, setMenu] = useState(false);\n  //targetCore\n  const [targetCoreX, setTargetCoreXPosition] = useState(0);\n  const [targetCoreY, setTargetCoreYPosition] = useState(0);\n  //TargetList\n  const [targetListX, setTargetListXPosition] = useState(0);\n  const [targetListY, setTargetListYPosition] = useState(0);\n  //X Y coordinates\n  const [cordX, setCordX] = useState(0);\n  const [cordY, setCordY] = useState(0);\n  //targetList images\n  const [targetList, setTargetList] = useState(null);\n  useEffect(() => {\n    fetchTargetImages();\n  }, []);\n  function fetchTargetImages() {\n    fetch(\"http://localhost:3000/fetchTargetImages\").then(res => {\n      return res.json();\n    }).then(data => setTargetList(data));\n  }\n  function handleGame(event) {\n    setMenu(!menu);\n    handlePosition(event);\n  }\n  const handlePosition = e => {\n    let xPositioning = e.clientX + window.scrollX;\n    let yPositioning = e.clientY + window.scrollY;\n    let targetCordX = e.clientX / window.innerWidth * 100;\n    let targetCordY = e.clientX / window.innerHeight * 100;\n    setTargetCoreXPosition(xPositioning);\n    setTargetCoreYPosition(yPositioning);\n    setTargetListXPosition(xPositioning);\n    setTargetListYPosition(yPositioning);\n    setCordX(targetCordX);\n    setCordY(targetCordY);\n    console.log(yPositioning, \"Correct Y\");\n    console.log(xPositioning, \"Correct X\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(targetContext.Provider, {\n      value: {\n        targetListX,\n        targetListY,\n        targetList,\n        targetCoreX,\n        targetCoreY,\n        cordX,\n        cordY,\n        menu,\n        setMenu,\n        setTargetList\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./images/midnight.png\",\n        alt: \"\",\n        className: \"Anime-Map\",\n        onClick: handleGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), menu && /*#__PURE__*/_jsxDEV(TargetCore, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 18\n      }, this), menu && /*#__PURE__*/_jsxDEV(TargetList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(AnimeMap, \"ZuBIch+I35widfQhjaofVjNQnbU=\");\n_c = AnimeMap;\nexport { AnimeMap, targetContext };\nvar _c;\n$RefreshReg$(_c, \"AnimeMap\");","map":{"version":3,"names":["useEffect","useState","useContext","createContext","TargetCore","TargetList","jsxDEV","_jsxDEV","Fragment","_Fragment","targetContext","AnimeMap","_s","menu","setMenu","targetCoreX","setTargetCoreXPosition","targetCoreY","setTargetCoreYPosition","targetListX","setTargetListXPosition","targetListY","setTargetListYPosition","cordX","setCordX","cordY","setCordY","targetList","setTargetList","fetchTargetImages","fetch","then","res","json","data","handleGame","event","handlePosition","e","xPositioning","clientX","window","scrollX","yPositioning","clientY","scrollY","targetCordX","innerWidth","targetCordY","innerHeight","console","log","children","Provider","value","src","alt","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Psnma/photo-tagging/client/src/components/AnimeMap.jsx"],"sourcesContent":["import { useEffect, useState, useContext, createContext } from \"react\";\r\nimport \"../index.css\";\r\nimport \"../styles/AnimeMap.css\";\r\nimport TargetCore from \"./TargetCore.jsx\";\r\nimport TargetList from \"./TargetList.jsx\";\r\nconst targetContext = createContext(null);\r\nfunction AnimeMap() {\r\n  //USE JSX TO CONDITIONALLY RENDER THE TAGETCORE AND BOX\r\n  //ADD THE IMAGES INTO THE BOX, USESTATE UPDATE THE PICTURES LATER\r\n\r\n  const [menu, setMenu] = useState(false);\r\n  //targetCore\r\n  const [targetCoreX, setTargetCoreXPosition] = useState(0);\r\n  const [targetCoreY, setTargetCoreYPosition] = useState(0);\r\n  //TargetList\r\n  const [targetListX, setTargetListXPosition] = useState(0);\r\n  const [targetListY, setTargetListYPosition] = useState(0);\r\n  //X Y coordinates\r\n  const [cordX, setCordX] = useState(0);\r\n  const [cordY, setCordY] = useState(0);\r\n  //targetList images\r\n  const [targetList, setTargetList] = useState(null);\r\n  useEffect(() => {\r\n    fetchTargetImages();\r\n  }, []);\r\n\r\n  function fetchTargetImages() {\r\n    fetch(\"http://localhost:3000/fetchTargetImages\")\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => setTargetList(data));\r\n  }\r\n\r\n  function handleGame(event) {\r\n    setMenu(!menu);\r\n    handlePosition(event);\r\n  }\r\n\r\n  const handlePosition = (e) => {\r\n    let xPositioning = e.clientX + window.scrollX;\r\n    let yPositioning = e.clientY + window.scrollY;\r\n    let targetCordX = (e.clientX / window.innerWidth) * 100;\r\n    let targetCordY = (e.clientX / window.innerHeight) * 100;\r\n    setTargetCoreXPosition(xPositioning);\r\n    setTargetCoreYPosition(yPositioning);\r\n    setTargetListXPosition(xPositioning);\r\n    setTargetListYPosition(yPositioning);\r\n    setCordX(targetCordX);\r\n    setCordY(targetCordY);\r\n    console.log(yPositioning, \"Correct Y\");\r\n    console.log(xPositioning, \"Correct X\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <targetContext.Provider\r\n        value={{\r\n          targetListX,\r\n          targetListY,\r\n          targetList,\r\n          targetCoreX,\r\n          targetCoreY,\r\n          cordX,\r\n          cordY,\r\n          menu,\r\n          setMenu,\r\n          setTargetList,\r\n        }}\r\n      >\r\n        <img\r\n          src=\"./images/midnight.png\"\r\n          alt=\"\"\r\n          className=\"Anime-Map\"\r\n          onClick={handleGame}\r\n        ></img>\r\n        {menu && <TargetCore />}\r\n        {menu && <TargetList />}\r\n      </targetContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { AnimeMap, targetContext };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}